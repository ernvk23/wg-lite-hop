# Docker Compose configuration for WireGuard VPN setup with Traefik reverse proxy

# Persistent storage volumes
# 'etc_wireguard' is a Docker-managed named volume.
# AdGuard volumes are also Docker-managed.
# Traefik config files are mounted from the host (bind mounts) and don't need to be declared here.
volumes:
  etc_wireguard: {}

services:
  # Traefik reverse proxy - handles SSL/TLS termination and routing
  traefik:
    image: traefik:3.3
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "443:443/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/traefik_dynamic.yml:/traefik_dynamic.yml:ro
      - ./traefik/acme.json:/acme.json
    command:
      - --certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_ACME_EMAIL}
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true"
      # --- MIDDLEWARES (Defined once on the Traefik service) ---
      - "traefik.http.middlewares.auth.basicauth.users=${AUTH_USER}:${AUTH_PASS_HASH}"
      
      # Dashboard routers
      - "traefik.http.routers.traefik-ui.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik-ui.entrypoints=websecure"
      - "traefik.http.routers.traefik-ui.middlewares=auth"
      - "traefik.http.routers.traefik-ui.service=api@internal"


  # AdGuard Home DNS ad blocker
  adguard:
    image: adguard/adguardhome:latest
    container_name: adguard
    restart: unless-stopped
    volumes:
      - ./adguard/adguard_work:/opt/adguardhome/work
      - ./adguard/adguard_conf:/opt/adguardhome/conf
    networks:
      traefik-net:
        ipv4_address: 10.42.42.43
        ipv6_address: fdcc:ad94:bacf:61a3::43
    labels:
      - "org.label-schema.schema-version=1.0"
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.adguard-ui.rule=Host(`adguard.${DOMAIN}`)"
      - "traefik.http.routers.adguard-ui.entrypoints=websecure"
      - "traefik.http.routers.adguard-ui.middlewares=auth"
      - "traefik.http.routers.adguard-ui.service=adguard"
      # Services
      - "traefik.http.services.adguard.loadbalancer.server.port=3000"

  # WireGuard VPN server with web UI
  wg-easy:
    image: ghcr.io/wg-easy/wg-easy:15
    container_name: wg-easy
    restart: unless-stopped
    networks:
      traefik-net:
        ipv4_address: 10.42.42.42
        ipv6_address: fdcc:ad94:bacf:61a3::42
    environment:
      # Sets the DNS for the CLIENTS that connect to the VPN. This is the crucial one.
      - WG_DNS=10.42.42.43
      # Sets the DNS for the WireGuard CONTAINER ITSELF. Good for consistency.
      - WG_DEFAULT_DNS=10.42.42.43
    ports:
      - "51820:51820/udp"
    volumes:
      - etc_wireguard:/etc/wireguard
      - /lib/modules:/lib/modules:ro
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.default.forwarding=1
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.wg-easy-ui.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.wg-easy-ui.entrypoints=websecure"
      - "traefik.http.routers.wg-easy-ui.middlewares=auth"
      - "traefik.http.routers.wg-easy-ui.service=wg-easy"
      - "traefik.http.routers.wg-easy-ui.priority=1"
      # Services
      - "traefik.http.services.wg-easy.loadbalancer.server.port=51821"

# Network configuration
networks:
  traefik-net:
    name: traefik-net
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 10.42.42.0/24
        - subnet: fdcc:ad94:bacf:61a3::/64

# Routes:
# - https://your_domain           -> WireGuard web UI
# - https://traefik.your_domain   -> Traefik dashboard
# - https://adguard.your_domain   -> AdGuard Home web UI