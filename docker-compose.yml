# Docker Compose configuration for WireGuard VPN setup with Traefik reverse proxy

# Persistent storage volumes
# 'etc_wireguard' is a Docker-managed named volume.
# AdGuard volumes are also Docker-managed.
# Traefik config files are mounted from the host (bind mounts) and don't need to be declared here.
volumes:
  etc_wireguard:
    name: etc_wireguard

services:
  # Traefik reverse proxy - handles SSL/TLS termination and routing
  traefik:
    image: traefik:3.5
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "443:443/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/traefik.yml:ro
      - ./traefik/traefik_dynamic.yml:/traefik_dynamic.yml:ro
      - ./traefik/acme.json:/acme.json
    command:
      - --certificatesresolvers.letsencrypt.acme.email=${TRAEFIK_ACME_EMAIL}
    networks:
      - traefik-net
    labels:
      - "traefik.enable=true"
      # --- MIDDLEWARES (Defined once on the Traefik service) ---
      # Basic Authentication for all UIs
      - "traefik.http.middlewares.auth.basicauth.users=${AUTH_USER}:${AUTH_PASS_HASH}"
      # Rate limiting for all UIs to prevent brute-force/DDoS
      - "traefik.http.middlewares.rate-limit.ratelimit.average=5" # requests per second
      - "traefik.http.middlewares.rate-limit.ratelimit.burst=10"
      # Chain the middlewares together for easy application to all UIs.
      # We rate-limit first, then authenticate.
      - "traefik.http.middlewares.secure-chain.chain.middlewares=rate-limit,auth"

      # Dashboard routers
      - "traefik.http.routers.traefik-ui.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik-ui.entrypoints=websecure"
      - "traefik.http.routers.traefik-ui.middlewares=secure-chain@docker"
      - "traefik.http.routers.traefik-ui.service=api@internal"

  # AdGuard Home DNS ad blocker
  adguard:
    # Stable fallback image, v0.107.65 known for breaking the login password.
    image: adguard/adguardhome:v0.107.64
    container_name: adguard
    restart: unless-stopped
    volumes:
      - ./adguard/adguard_work:/opt/adguardhome/work
      - ./adguard/adguard_conf:/opt/adguardhome/conf
    networks:
      traefik-net:
        ipv4_address: 10.42.42.43
        ipv6_address: fdcc:ad94:bacf:61a3::2b
    labels:
      - "org.label-schema.schema-version=1.0"
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.adguard-ui.rule=Host(`adguard.${DOMAIN}`)"
      - "traefik.http.routers.adguard-ui.entrypoints=websecure"
      - "traefik.http.routers.adguard-ui.middlewares=secure-chain@docker"
      - "traefik.http.routers.adguard-ui.service=adguard"
      # If you choose to set the AdGuard Home UI port to '80' (the default option in the UI)
      # you will need to perform the following steps after completing the setup:
      # 1. Bring down the services: `docker compose down`
      # 2. In this file, comment out the 'port=3000' line and uncomment the 'port=80' line below.
      # 3. Bring up the services again: `docker compose up -d`
      #
      # For a simpler setup, always configure AdGuard Home UI to use port 3000.
      - "traefik.http.services.adguard.loadbalancer.server.port=3000"
      # - "traefik.http.services.adguard.loadbalancer.server.port=80"
      # Network
      - "traefik.docker.network=traefik-net"

      # WireGuard VPN server with web UI
  wg-easy:
    image: ghcr.io/wg-easy/wg-easy:15
    container_name: wg-easy
    restart: unless-stopped
    networks:
      traefik-net:
        ipv4_address: 10.42.42.42
        ipv6_address: fdcc:ad94:bacf:61a3::2a
    environment:
      # Unattended setup (Group 1 + DNS)
      - INIT_ENABLED=true
      - INIT_USERNAME=${WG_ADMIN_USER}
      - INIT_PASSWORD=${WG_ADMIN_PASS}
      - INIT_HOST=${DOMAIN}
      - INIT_PORT=51820
      - INIT_DNS=10.42.42.43,fdcc:ad94:bacf:61a3::2b
      # VPN network ranges (Group 3 - wg-easy defaults)
      - INIT_IPV4_CIDR=10.8.0.0/24
      - INIT_IPV6_CIDR=fd42:42:42::/64
    ports:
      - "51820:51820/udp"
    volumes:
      - etc_wireguard:/etc/wireguard
      - /lib/modules:/lib/modules:ro
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.default.forwarding=1
    labels:
      - "traefik.enable=true"
      # Routers
      - "traefik.http.routers.wg-easy-ui.rule=Host(`${DOMAIN}`)"
      - "traefik.http.routers.wg-easy-ui.entrypoints=websecure"
      - "traefik.http.routers.wg-easy-ui.middlewares=secure-chain@docker"
      - "traefik.http.routers.wg-easy-ui.service=wg-easy"
      # Services
      - "traefik.http.services.wg-easy.loadbalancer.server.port=51821"
      # Network
      - "traefik.docker.network=traefik-net"

# Network configuration
networks:
  traefik-net:
    name: traefik-net
    driver: bridge
    enable_ipv6: true
    ipam:
      driver: default
      config:
        - subnet: 10.42.42.0/24
        - subnet: fdcc:ad94:bacf:61a3::/64

# Routes:
# - https://your_domain           -> WireGuard web UI
# - https://traefik.your_domain   -> Traefik dashboard
# - https://adguard.your_domain   -> AdGuard Home web UI
